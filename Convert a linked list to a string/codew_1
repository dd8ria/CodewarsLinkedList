"""code for convert a linked list to a string"""

class Node:
    def __init__(self, data, next=None):
        self.data = data
        self.next = next

def stringify(node):
    """
    accepts an argument and returns a string representation of the list
    
    >>> stringify(Node(0, Node(1, Node(2, Node(3)))))
    '0 -> 1 -> 2 -> 3 -> None'
    >>> stringify(None)
    'None'
    """
    res = []
    while node:
        res.append(str(node.data))
        node = node.next
    res.append('None')
    return ' -> '.join(res)


if __name__ == '__main__':
    import doctest
    doctest.testmod()




    if s.lower() in ['null', 'nil', 'nullptr', 'null()', 'none']:
        return None

    values = list(map(int, s.replace(' -> None', '').split(' -> ')))
    nodes = [Node(val) for val in values]
    for i in range(len(nodes) - 1):
        nodes[i].next = nodes[i + 1]
    if nodes:
        return nodes[0]
    return None